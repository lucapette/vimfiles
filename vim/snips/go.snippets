snippet /^main/ "main" r
package ${1:main}

import(
    "fmt"
)

func main() {
    $2
}
endsnippet
snippet /^test/ "test" r
package ${1:main}

import(
    "testing"
)

$2
endsnippet
snippet for "For loop" b
for ${1:condition}${1/(.+)/ /}{
	${0:${VISUAL}}
}
endsnippet
snippet for "For range loop" b
for ${2:name} := range ${1:collection} {
	${0:${VISUAL}}
}
endsnippet
snippet if "If statement" b
if ${1:condition}${1/(.+)/ /}{
	${0:${VISUAL}}
}
endsnippet
snippet /^meth/ "Method" b
func (${1:receiver} ${2:type}) ${3:name}(${4:params})${5/(.+)/ /}${5:type} {
	${0:${VISUAL}}
}
endsnippet
snippet func "Function" b
func ${1:name}(${2:params})${3/(.+)/ /}${3:type} {
	${0:${VISUAL}}
}
endsnippet
snippet map "Map type" w
map[${1:type}]${2:val}
endsnippet
snippet : "Variable declaration :=" w
${1:name} := ${0:value}
endsnippet
snippet	t "Test Function" w
func Test${1:What}(t *testing.T) {
    $2

	if actual != expected {
		t.Errorf("Expected '%s' to == '%s'", actual, expected)
	}
}
endsnippet
snippet	b "bench Function" b
func Benchmark${1:What}(b *testing.B) {
    $2
}
endsnippet
